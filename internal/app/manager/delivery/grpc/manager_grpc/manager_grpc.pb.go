// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/app/manager/delivery/grpc/manager_grpc/manager_grpc.proto

package manager_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Manager struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AccountId            int64                `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	RegistrationDate     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=RegistrationDate,proto3" json:"RegistrationDate,omitempty"`
	Location             string               `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	CompanyId            int64                `protobuf:"varint,5,opt,name=CompanyId,proto3" json:"CompanyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Manager) Reset()         { *m = Manager{} }
func (m *Manager) String() string { return proto.CompactTextString(m) }
func (*Manager) ProtoMessage()    {}
func (*Manager) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f51de7806f00cac, []int{0}
}

func (m *Manager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manager.Unmarshal(m, b)
}
func (m *Manager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manager.Marshal(b, m, deterministic)
}
func (m *Manager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manager.Merge(m, src)
}
func (m *Manager) XXX_Size() int {
	return xxx_messageInfo_Manager.Size(m)
}
func (m *Manager) XXX_DiscardUnknown() {
	xxx_messageInfo_Manager.DiscardUnknown(m)
}

var xxx_messageInfo_Manager proto.InternalMessageInfo

func (m *Manager) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Manager) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Manager) GetRegistrationDate() *timestamp.Timestamp {
	if m != nil {
		return m.RegistrationDate
	}
	return nil
}

func (m *Manager) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Manager) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

type Info struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	CompanyID            int64    `protobuf:"varint,2,opt,name=CompanyID,proto3" json:"CompanyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f51de7806f00cac, []int{1}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Info) GetCompanyID() int64 {
	if m != nil {
		return m.CompanyID
	}
	return 0
}

func init() {
	proto.RegisterType((*Manager)(nil), "manager_grpc.Manager")
	proto.RegisterType((*Info)(nil), "manager_grpc.Info")
}

func init() {
	proto.RegisterFile("internal/app/manager/delivery/grpc/manager_grpc/manager_grpc.proto", fileDescriptor_2f51de7806f00cac)
}

var fileDescriptor_2f51de7806f00cac = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x5a, 0xab, 0x1d, 0xb5, 0xc8, 0x82, 0x12, 0x82, 0x60, 0xe8, 0x29, 0xa7, 0x2c,
	0xd4, 0x9b, 0x78, 0xd1, 0x06, 0x31, 0x50, 0x2f, 0x41, 0xcf, 0x32, 0x4d, 0xa6, 0x21, 0x90, 0xec,
	0x2e, 0x9b, 0xad, 0xd0, 0x9f, 0xe6, 0xbf, 0x93, 0x26, 0xd9, 0xd8, 0xd2, 0xe3, 0xfb, 0x66, 0x1e,
	0xef, 0xcd, 0xc0, 0x6b, 0x29, 0x0c, 0x69, 0x81, 0x15, 0x47, 0xa5, 0x78, 0x8d, 0x02, 0x0b, 0xd2,
	0x3c, 0xa7, 0xaa, 0xfc, 0x21, 0xbd, 0xe3, 0x85, 0x56, 0x99, 0xa5, 0xdf, 0x27, 0x22, 0x52, 0x5a,
	0x1a, 0xc9, 0xae, 0x0e, 0x99, 0xff, 0x50, 0x48, 0x59, 0x54, 0xc4, 0xdb, 0xd9, 0x7a, 0xbb, 0xe1,
	0xa6, 0xac, 0xa9, 0x31, 0x58, 0xab, 0x6e, 0x7d, 0xfe, 0xeb, 0xc0, 0xf9, 0x47, 0xe7, 0x60, 0x33,
	0x70, 0x93, 0xd8, 0x73, 0x02, 0x27, 0x1c, 0xa5, 0x6e, 0x12, 0xb3, 0x7b, 0x98, 0xbe, 0x64, 0x99,
	0xdc, 0x0a, 0x93, 0xe4, 0x9e, 0xdb, 0xe2, 0x7f, 0xc0, 0xde, 0xe0, 0x26, 0xa5, 0xa2, 0x6c, 0x8c,
	0x46, 0x53, 0x4a, 0x11, 0xa3, 0x21, 0x6f, 0x14, 0x38, 0xe1, 0xe5, 0xc2, 0x8f, 0xba, 0xd4, 0xc8,
	0xa6, 0x46, 0x9f, 0x36, 0x35, 0x3d, 0xf1, 0x30, 0x1f, 0x2e, 0x56, 0x32, 0x6b, 0xb5, 0x37, 0x0e,
	0x9c, 0x70, 0x9a, 0x0e, 0x7a, 0xdf, 0x60, 0x29, 0x6b, 0x85, 0x62, 0x97, 0xe4, 0xde, 0x59, 0xd7,
	0x60, 0x00, 0xf3, 0x67, 0x18, 0x27, 0x62, 0x23, 0xd9, 0x1d, 0x4c, 0xbe, 0x1a, 0xd2, 0x43, 0xf7,
	0x5e, 0x1d, 0xba, 0x63, 0xdb, 0x7f, 0x00, 0x8b, 0x15, 0xcc, 0xfa, 0xc3, 0xdf, 0x51, 0xe4, 0x15,
	0x69, 0xf6, 0x04, 0xd7, 0x4b, 0x4d, 0x68, 0xc8, 0x3e, 0x84, 0x45, 0x47, 0x0f, 0xde, 0x87, 0xf9,
	0xb7, 0xc7, 0xac, 0x5f, 0x5d, 0x4f, 0xda, 0x5b, 0x1f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x73,
	0x80, 0x67, 0x13, 0xc3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ManagerHandlerClient is the client API for ManagerHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagerHandlerClient interface {
	CreateManager(ctx context.Context, in *Info, opts ...grpc.CallOption) (*Manager, error)
}

type managerHandlerClient struct {
	cc *grpc.ClientConn
}

func NewManagerHandlerClient(cc *grpc.ClientConn) ManagerHandlerClient {
	return &managerHandlerClient{cc}
}

func (c *managerHandlerClient) CreateManager(ctx context.Context, in *Info, opts ...grpc.CallOption) (*Manager, error) {
	out := new(Manager)
	err := c.cc.Invoke(ctx, "/manager_grpc.ManagerHandler/CreateManager", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagerHandlerServer is the server API for ManagerHandler service.
type ManagerHandlerServer interface {
	CreateManager(context.Context, *Info) (*Manager, error)
}

// UnimplementedManagerHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedManagerHandlerServer struct {
}

func (*UnimplementedManagerHandlerServer) CreateManager(ctx context.Context, req *Info) (*Manager, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateManager not implemented")
}

func RegisterManagerHandlerServer(s *grpc.Server, srv ManagerHandlerServer) {
	s.RegisterService(&_ManagerHandler_serviceDesc, srv)
}

func _ManagerHandler_CreateManager_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Info)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerHandlerServer).CreateManager(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/manager_grpc.ManagerHandler/CreateManager",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerHandlerServer).CreateManager(ctx, req.(*Info))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManagerHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "manager_grpc.ManagerHandler",
	HandlerType: (*ManagerHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateManager",
			Handler:    _ManagerHandler_CreateManager_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/app/manager/delivery/grpc/manager_grpc/manager_grpc.proto",
}
